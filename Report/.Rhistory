View(arbuthnot)
dim(arbuthnot)
names(arbuthnot)
View(arbuthnot)
arbuthnot$boys
ggplot(data = arbuthnot, aes(x=year, y=girls))+
geom_point()
ggplot(data=arbuthnot, aes(x=year, y=girls))+geom_point()
?ggplot
View(arbuthnot)
arbuthnot<-arbuthnot%>%
mutate(total=boys+girls)
View(arbuthnot)
ggplot(data=arbuthnot, aes(x=year,y=total))+
geom_line()+
geom_piont()
ggplot(data=arbuthnot, aes(x=year,y=total))+
+ geom_line()+
+ geom_point()
ggplot(data = arbuthnot, aes(x=year, y))
ggplot(data = arbuthnot, aes(x = year, y = total)) +
geom_line() +
geom_point()
ggplot(data = arbuthnot, aes(x = year, y = total)) +
geom_line() +
geom_point()
arbuthnot<-arbuthnot%>%
mutate(more_boys=boys>girls)
View(arbuthnot)
data(present)
present
dim(present)
names(present)
range(present$year)
present<-present%>%
mutate(total=boys+girls)
View(present)
present<-present%>%
mutate(prop_boys=boys/total)
ggplot(data=present, aes(x=year, y=prop_boys))+
geom_line()
present<-present%>%
mutate(more_boys=boys>girls)
present<-present%>%
mutate(prop_boy_girl=boys/girls)
ggplot(data=present, aes(x=year, y=prop_boy_girl))+
geom_line()
library(statsr)
library(dplyr)
library(ggplot2)
data("nycflights")
nvyflights
nycflights
View(nycflights)
names(nycflights)
?nycflights
str
str(nycflights)
ggplot(data=nycflights, aes(x=dep_delay))+geom_histogram()
rdu_flights<-nycflights %>%
filter(dest=="RDU")
ggplot(data=rdu_flights,aes(x=dep_delay))+geom_histogram()
sfo_feb_flights<-nycflights %>%
filter(dest=="SFO",month=="2")
sfo_feb_flights
dim(sfo_feb_flights)
names(sfo_feb_flights)
View(sfo_feb_flights)
ggplot(data=sfo_feb_flights, aes(x=arr_delay)), geom_histogram()
ggplot4
ggplot(data=sfo_feb_flights, aes(x=arr_delay))+geom_histogram()
sfo_feb_flights%>%
group_by(carrier)%>%
summarise(median_ad=median(arr_delay))
sfo_feb_flights%>%
+ group_by(carrier)%>%
+ summarise(median_ad=median(arr_delay), IQR_ad=IQR(arr_delay))
sfo_feb_flights%>%
group_by(carrier)%>%
summarise(median_ad=median(arr_delay), IQR_ad=IQR(arr_delay))
nycflights%>%
group_by(month)%>%
summerise(median_dd=median(dep_delay))%>%
arrange(desc(median_dd))
nycflights%>%
+ group_by(month)%>%
+ summarise(median_dd=median(dep_delay))%>%
+ arrange(desc(median_dd))
nycflights%>%group_by(month)%>%
+ summerise(median_dd=median(dep_delay))%>%
+ arrange(desc(median_dd))
nycflights%>%
group_by(month)%>%
summarise(median_dd=median(dep_delay))%>%
arrange(desc(median_dd))
ggplot(nycflights, aes(x=factor(month), y=dep_delay))+
geom_boxplot()
nycflights<-nycflights%>%
mutate(dep_type=ifelse(dep_delay<5, "on time", "delayed")
nycflights%>%
nycflights<-nycflights%>%
mutate(dep_type=ifelse(dep_delay<5, "on time", "delayed"))
nycflights%>%
group_by(origin)%>%
View(nycflights)
summarise(ot_dep_rate=sum(dep_type=="on time")n())
View(nycflights)
ggplot(data=data=nycflights,aes(x=origin, fill=dep_type))
ggplot(data=nycflights,aes(x=origin, fill=dep_type))+geom_bar()
nycflights%>%nycflights
nycflights<-nycflights%>%
mutate(total_min=hour*60+minute)
View(nycflights)
nycflights<-nycflights%>%
mutate(spd=distance/total_min)
View(nycflights)
nycflights<-nycflights%>%
mutate(speed=distance/air_time)
View(nycflights)
nycflights%>%
group_by(tailnum)%>%
summarise(avg_speed=sum(speed)/n())%>%
arrange(desc(avg_speed))
select(avg_speed,tailnum)
nycflights%>%
group_by(tailnum)
nycflights<-nycflights%>%
mutate(avg_speed=distance/(air_time/60))
View(nycflights)
nycflights
nycflights%>%
group_by(tailnum)%>%
summarise(max(avg_speed))
nycflights%>%
group_by(tailnum)%>%
arrange(desc(avg_speed))
nycflights%>%
select(avg_speed, tailnum)+arrange(desc(avg_speed))
nycflights%>%
select(avg_speed, tailnum)
arrange(desc(avg_speed))
nycflights%>%
select(avg_speed, tailnum)%>%
arrange(desc(avg_speed))
ggplot(data=nycflights, aes(x=avg_speed, y=distance))+geom_scatterplot
ggplot(data=nycflights,aes(x=avg_speed, y=distance))+geom_point()
nycflights<-nycflights%>%
mutate(arr_type=ifelse(arr_delay>0, "delay", "on time"))
View(nycflights)
nycflights%>%
summarise(proportion=sum(dep_type=="delayed",arr_type=="on time"/n())
arrange(desc(proportion))
nycflights%>5
nycflights%>%
summarise(proportion=sum(dep_type=="delayed",arr_type=="on time")/n())
nycflights%>%
summarise(pro=sum(dep_type=="delayed",arr_type=="on time")/sum(dep_type=="delayed"))
nycflights%>%
group_by(dep_time)%>%
summarise(sum(pro=arr_type=="on time")/n())
nycflights%>%
group_by(dep_type)%%
fdff
nycflights%>%
group_by(dep_type)%>%
summarise(pro=sum(arr_type="on time")/n())
nycflights%>%
group_by(dep_type)%>%
summarise(pro=sum(arr_type=="on time")/n())
nycflights%>%
group_by(dep_type)
nycflights%>%
group_by(dep_type)%>%
summarise(sum_do=sum(arr_type=="on time"))
ggplot(data=nycflights,aes(x=distance,y=avg_speed))+geom_point()
install.packages("shiny")
library(shiny)
runExample("01_hello")
getwd()
setwd()
setwd(dir = D:\Hard work)
shiny::runApp('D:/Hard work/boss')
runApp('D:/Hard work/boss')
runApp('D:/Hard work/boss')
runApp('D:/Hard work/boss')
runApp('D:/Hard work/boss')
runApp('D:/Hard work/boss')
shiny::runApp('D:/Hard work/m6A')
devtools::install_github("bioinformatist/CrossICC")
devtools::install_github("bioinformatist/CrossICC")
devtools::install_github("bioinformatic/CrossICC")
devtools::install_github("bioinformatic/CrossICC")
devtools::install_github("bioinformatist/CrossICC")
install.packages("Bioconductor")
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
shinyApp(ui, server)
withProgress(message = 'Calculation in progress',
detail = 'This may take a while...', value = 0, {
for (i in 1:15) {
incProgress(1/15)
Sys.sleep(0.25)
}
})
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
install.packages("readr")
install.packages("Biobase")
install.packages("ggpubr")
install.packages("scales")
install.packages("clusterProfliler")
install.packages("Biobase")
install.packages("biobase")
install.packages("Biobase")
source("http://bioconductor.org/biocLite.R")
biocLite("Biobase")
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
install.packages("rlang")
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
is.atomic(pl())
is.atomic(pl())
is.atomic(pl)
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
rownames(countData1) <- countData1$id
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
source(“http://bioconductor.org/biocLite.R”)
biocLite（“clusterprofiler”）
source(“http://bioconductor.org/biocLite.R”)
source("http://bioconductor.org/biocLite.R") biocLite（"clusterprofiler"）
source("http://bioconductor.org/biocLite.R")
biocLite（"clusterprofiler"）
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("clusterProfiler", version = "3.8")
library(org.Mm.eg.db)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("org.Hs.eg.db", version = "3.8")
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/TBtools')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/indicator')
runApp('D:/Hard work/indicator')
runApp('D:/Hard work/indicator')
shiny::runApp('D:/Hard work/m6A')
library(shinyWidgets)
install.packages("shinyWidgets")
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
install.packages("shinyBS")
shiny::runApp('D:/Hard work/m6A')
library(shinyBS)
install.packages("shinyBS")
install.packages("shinyBS")
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/download')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
bsExample("Collapses")
bsExample("Tooltips_and_Popovers")
bsExample("Modals")
bsExample("Collapses")
bsExample("Tooltips_and_Popovers")
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
bsExample("Modals")
runApp('D:/Hard work/m6A')
list("toggleModal")
shiny::runApp('D:/Hard work/m6A')
devtools::install_github('andrewsali/shinycssloaders')
devtools::install_github('andrewsali/shinycssloaders')
ls()
ls()
devtools::install_github('andrewsali/shinycssloaders')
install.packages("rlang")
devtools::install_github('andrewsali/shinycssloaders')
shiny::runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
View(plotOutput)
View(renderPlot)
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/test')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
shiny::runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
View(GoKegg)
runApp('D:/Hard work/test')
runApp('D:/Hard work/test')
shiny::runApp('D:/Hard work/m6A')
names(diamonds)
A <- array(c(1:3),dim = (3,3,3,2))
A <- array(c(1,2), dim = (3,3,2))
A <- array(c(1,2), dim = (3,3,2))   print(A)
runApp('D:/Hard work/m6A')
runApp('D:/Hard work/m6A')
head(diamonds)
tail(diamonds)
runApp('D:/Hard work/m6A')
setwd("D:/Hard work")
load("DATA/MATK_arranged_results_20190528.m6APipe")
View(m6a.anno.matrix)
shiny::runApp('viewer')
runApp('D:/Hard work/test')
runApp('D:/Hard work/viewer')
setwd("E:/zky/m6Apipe/viewer/")
source("ui.R")
source("server.R")
m6apipe.results.file = "E:/zky/m6Aviewer/MATK_arranged_results_20190619.m6APipe"
load(m6apipe.results.file)
runApp(appDir = "E:/zky/m6Apipe/viewer/",port = 8848,launch.browser = T)
setwd("E:/zky/m6Apipe/viewer/")
source("ui.R")
source("server.R")
m6apipe.results.file = "E:/zky/m6Aviewer/MATK_arranged_results_20190619.m6APipe"
load(m6apipe.results.file)
runApp(appDir = "E:/zky/m6Apipe/viewer/",port = 8848,launch.browser = T)
runApp(appDir = "E:/zky/m6Apipe/viewer/",port = 8848,launch.browser = T)
library(ggplot2)
library(ggseqlogo)
library(shiny)
library(shinyjs)
library(shinyWidgets)
library(shinydashboard)
library(shinyBS)
library(shinycssloaders)
library(shiny)
library(ggplot2)
library(ggsci)
library(pheatmap)
library(stringr)
library(dplyr)
library(knitr)
library(reshape2)
runApp(appDir = "E:/zky/m6Apipe/viewer/",port = 8848,launch.browser = T)
library(ggrepel)
runApp(appDir = "E:/zky/m6Apipe/viewer/",port = 8848,launch.browser = T)
