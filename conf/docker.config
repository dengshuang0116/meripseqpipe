/*
 * -------------------------------------------------
 *  nf-core/m6APipe Nextflow docker soft config file
 * -------------------------------------------------
 */

process {

  container = 'ninomoriaty/m6apipe:latest'

  cpus = { check_max( 8, 'cpus' ) }
  memory = { check_max( 20.GB * task.attempt, 'memory' ) }
  time = { check_max( 240.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'finish' }
  maxRetries = 1
  maxErrors = '-1'
  maxForks = 12

  // Process-specific resource requirements
  withName: MATKpeakCalling {
    cpus = { check_max( 30, 'cpus' ) }
    memory = { check_max( 70.GB * task.attempt, 'memory' ) }
    time = { check_max( 240.h * task.attempt, 'time' ) }
  }
  withName:  Meyer {
    cpus = { check_max( 30, 'cpus' ) }
    memory = { check_max( 70.GB * task.attempt, 'memory' ) }
    time = { check_max( 240.h * task.attempt, 'time' ) }
  }
  withName: PeaksQuantification {
    cpus = { check_max( 30, 'cpus' ) }
    memory = { check_max( 30.GB * task.attempt, 'memory' ) }
    time = { check_max( 240.h * task.attempt, 'time' ) }
 }
  withName: StarAlign {
    cpus = { check_max( 14, 'cpus' ) }
    memory = { check_max( 35.GB * task.attempt, 'memory' ) }
    time = { check_max( 240.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }
  withName: Sort {
    cpus = { check_max( 30, 'cpus' ) }
    memory = { check_max( 35.GB * task.attempt, 'memory' ) }
    time = { check_max( 240.h * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }
}
params {
  // Defaults only, expecting to be overwritten
  matk_jar = '/MATK-1.0.jar'
  max_memory = 80.GB
  max_cpus = 32
  max_time = 240.h
  igenomes_base = 's3://ngi-igenomes/igenomes/'
}
